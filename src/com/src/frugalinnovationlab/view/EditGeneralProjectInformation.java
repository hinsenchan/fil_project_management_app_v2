/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.src.frugalinnovationlab.view;

import com.src.frugalinnovationlab.Controller.EditGeneralProjectInformationController;
import com.src.frugalinnovationlab.Entity.Project;
import com.src.frugalinnovationlab.Entity.ProjectCategory;
import com.src.frugalinnovationlab.Entity.ProjectStatus;
import java.util.List;
import com.src.frugalinnovationlab.Wrappers.ComboItem;
import java.util.ArrayList;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author diptik
 */
public class EditGeneralProjectInformation extends javax.swing.JPanel {

    EditGeneralProjectInformationController editGeneralProjectInformationController;
    List<Project> projectList;
    List<String> categoriesList;
    List<ProjectStatus> projectStatusList;
    ArrayList categorySelected = new ArrayList();

    /**
     * Creates new form EditGeneralProjectInformation
     */
    public EditGeneralProjectInformation() {

        categoriesList = new ArrayList<String>();
        editGeneralProjectInformationController = new EditGeneralProjectInformationController(this);
        projectStatusList = editGeneralProjectInformationController.getProjectStatusFromDatabase();
        projectList = editGeneralProjectInformationController.getProjectsFromDatabase();
        initComponents();
        /*
        for (int i = 0; i < projectList.size(); i++) {
            //Project project = projectList.get(i);
            System.out.println("id : " + projectList.get(i).getId());
            System.out.println("name : " + projectList.get(i).getName());
        }
        */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        addNewProjectTextArea = new javax.swing.JLabel();
        projectNameTextField = new javax.swing.JTextField();
        shortDescriptionTextField = new javax.swing.JTextField();
        projectNameLabel = new javax.swing.JLabel();
        shortDescriptionLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        statusProjectLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        bioengineeringCheckBox = new javax.swing.JCheckBox();
        computerEngineeringCheckBox = new javax.swing.JCheckBox();
        civilEngineeringCheckBox = new javax.swing.JCheckBox();
        mechanicalEngineeringCheckBox = new javax.swing.JCheckBox();
        electricalEngineeringCheckBox = new javax.swing.JCheckBox();
        locationLabel = new javax.swing.JLabel();
        projectLocationTextField = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        projectStatusComboBox = new javax.swing.JComboBox();
        startDateLabel = new javax.swing.JLabel();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        scopeLabel = new javax.swing.JLabel();
        scopeTextField = new javax.swing.JTextField();
        outcomeLabel = new javax.swing.JLabel();
        outcomeTextField = new javax.swing.JTextField();
        editProjectDetails = new javax.swing.JButton();
        chooseProjectComboBox = new javax.swing.JComboBox();
        logoLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 170, 153), 4));
        setPreferredSize(new java.awt.Dimension(609, 600));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainPanel.setInheritsPopupMenu(true);
        mainPanel.setRequestFocusEnabled(false);

        addNewProjectTextArea.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        addNewProjectTextArea.setText("Edit General Project Information");

        projectNameTextField.setColumns(20);
        projectNameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        projectNameTextField.setToolTipText("Enter Project Name");
        projectNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectNameTextFieldActionPerformed(evt);
            }
        });

        shortDescriptionTextField.setColumns(20);
        shortDescriptionTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        shortDescriptionTextField.setToolTipText("Enter Short Description");

        projectNameLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        projectNameLabel.setText("Project Name");
        projectNameLabel.setToolTipText("");

        shortDescriptionLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        shortDescriptionLabel.setText("Short Description");
        shortDescriptionLabel.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setText("General Description");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("Enter Long Description");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);

        statusProjectLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        statusProjectLabel.setText("Status of Project");

        categoryLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        categoryLabel.setText("Category");

        bioengineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        bioengineeringCheckBox.setText("Bioengineering");
        bioengineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bioengineeringCheckBoxActionPerformed(evt);
            }
        });

        computerEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        computerEngineeringCheckBox.setText("Computer Engineering");
        computerEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computerEngineeringCheckBoxActionPerformed(evt);
            }
        });

        civilEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        civilEngineeringCheckBox.setText("Civil Engineering");
        civilEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                civilEngineeringCheckBoxActionPerformed(evt);
            }
        });

        mechanicalEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        mechanicalEngineeringCheckBox.setText("Mechanical Engineering");
        mechanicalEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mechanicalEngineeringCheckBoxActionPerformed(evt);
            }
        });

        electricalEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        electricalEngineeringCheckBox.setText("Electrical Engineering");
        electricalEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electricalEngineeringCheckBoxActionPerformed(evt);
            }
        });

        locationLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        locationLabel.setText("Location");

        projectLocationTextField.setColumns(20);
        projectLocationTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        projectLocationTextField.setToolTipText("Input a Location");
        projectLocationTextField.setPreferredSize(new java.awt.Dimension(356, 30));
        projectLocationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectLocationTextFieldActionPerformed(evt);
            }
        });

        projectStatusComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        projectStatusComboBox.setForeground(new java.awt.Color(0, 95, 45));
        projectStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a Status" }));
        for(int i = 0; i < projectStatusList.size(); i++){
            //projectStatusList.get(i).getStatus();
            projectStatusComboBox.addItem(projectStatusList.get(i).getStatus());
        }
        projectStatusComboBox.setToolTipText("Choose a Status");
        projectStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectStatusComboBoxActionPerformed(evt);
            }
        });

        startDateLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        startDateLabel.setText("Start/End Date");

        startDate.setBackground(new java.awt.Color(150, 170, 153));
        startDate.setToolTipText("Choose a Start Date");

        endDate.setBackground(new java.awt.Color(150, 170, 153));
        endDate.setToolTipText("Choose an End Date");
        endDate.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        scopeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        scopeLabel.setText("Scope");

        scopeTextField.setColumns(20);
        scopeTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        scopeTextField.setToolTipText("Scope");
        scopeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scopeTextFieldActionPerformed(evt);
            }
        });

        outcomeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        outcomeLabel.setText("Outcome");

        outcomeTextField.setColumns(20);
        outcomeTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        outcomeTextField.setToolTipText("Outcome");

        editProjectDetails.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        editProjectDetails.setForeground(new java.awt.Color(0, 95, 45));
        editProjectDetails.setText("Edit Project Information");
        editProjectDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProjectDetailsActionPerformed(evt);
            }
        });

        chooseProjectComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        chooseProjectComboBox.setForeground(new java.awt.Color(0, 95, 45));
        chooseProjectComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a Project" }));
        for (int i = 0; i < projectList.size(); i++) {
            //System.out.println("id : " +projectList.get(i).getId());
            chooseProjectComboBox.addItem(new ComboItem(projectList.get(i).getName(),
                String.valueOf(projectList.get(i).getId())));
    }
    chooseProjectComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            chooseProjectComboBoxActionPerformed(evt);
        }
    });

    logoLabel2.setBackground(new java.awt.Color(255, 255, 255));
    logoLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scu-mission.png"))); // NOI18N

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addGap(27, 27, 27)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(projectNameLabel)
                        .addComponent(statusProjectLabel)
                        .addComponent(categoryLabel)
                        .addComponent(locationLabel)
                        .addComponent(startDateLabel)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(scopeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(outcomeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(shortDescriptionLabel))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(computerEngineeringCheckBox)
                                .addComponent(projectStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(bioengineeringCheckBox)
                                    .addGap(42, 42, 42)
                                    .addComponent(electricalEngineeringCheckBox))
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(civilEngineeringCheckBox)
                                    .addGap(32, 32, 32)
                                    .addComponent(mechanicalEngineeringCheckBox))
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(projectLocationTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(editProjectDetails, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(outcomeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scopeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(shortDescriptionTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(projectNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addComponent(addNewProjectTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chooseProjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(120, Short.MAX_VALUE))
        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(logoLabel2)
                .addContainerGap(311, Short.MAX_VALUE)))
    );
    mainPanelLayout.setVerticalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(addNewProjectTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(chooseProjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(projectNameLabel)
                .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(shortDescriptionLabel)
                .addComponent(shortDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel2))
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(statusProjectLabel)
                .addComponent(projectStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(4, 4, 4)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(categoryLabel)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(electricalEngineeringCheckBox)
                    .addComponent(bioengineeringCheckBox)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(civilEngineeringCheckBox)
                .addComponent(mechanicalEngineeringCheckBox))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(computerEngineeringCheckBox)
            .addGap(2, 2, 2)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(locationLabel)
                .addComponent(projectLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(startDateLabel)
                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(scopeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(scopeLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(outcomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(outcomeLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(editProjectDetails)
            .addGap(35, 35, 35))
        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(logoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE)))
    );

    jScrollPane1.setViewportView(mainPanel);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
    );
    }// </editor-fold>//GEN-END:initComponents

    private void bioengineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bioengineeringCheckBoxActionPerformed
    }//GEN-LAST:event_bioengineeringCheckBoxActionPerformed

    private void computerEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computerEngineeringCheckBoxActionPerformed
    }//GEN-LAST:event_computerEngineeringCheckBoxActionPerformed

    private void civilEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_civilEngineeringCheckBoxActionPerformed
    }//GEN-LAST:event_civilEngineeringCheckBoxActionPerformed

    private void mechanicalEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mechanicalEngineeringCheckBoxActionPerformed
        categorySelected.add("Mechanical Engineering");
    }//GEN-LAST:event_mechanicalEngineeringCheckBoxActionPerformed

    private void electricalEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electricalEngineeringCheckBoxActionPerformed
        categorySelected.add("Electrical Engineering");
    }//GEN-LAST:event_electricalEngineeringCheckBoxActionPerformed

    private void projectLocationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectLocationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectLocationTextFieldActionPerformed

    private void projectStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectStatusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectStatusComboBoxActionPerformed

    private void scopeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scopeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scopeTextFieldActionPerformed

    private void projectNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectNameTextFieldActionPerformed

    private void chooseProjectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProjectComboBoxActionPerformed
        // TODO add your handling code here:
        //String selectedProjectId = chooseProjectComboBox.getSelectedItem().toString();
        Object projectIdItem = chooseProjectComboBox.getSelectedItem();
        String projectIdValue = ((ComboItem) projectIdItem).getValue();
        List<Project> projList = editGeneralProjectInformationController.fetchProjectGeneralInformation(projectIdValue);
        projectNameTextField.setText(projList.get(0).getName());
        shortDescriptionTextField.setText(projList.get(0).getShortdesc());
        jTextArea1.setText(projList.get(0).getDescription());
        startDate.setDate(projList.get(0).getStartDate());
        endDate.setDate(projList.get(0).getEndDate());
        scopeTextField.setText(projList.get(0).getScope());
        outcomeTextField.setText(projList.get(0).getOutcome());
        projectLocationTextField.setText(projList.get(0).getLocation());
        Set<ProjectStatus> set = projList.get(0).getProjectStatusSet();
        for (ProjectStatus projectStatus : set) {
            System.out.println("status is : " + projectStatus.getStatus());
            projectStatusComboBox.setSelectedItem(projectStatus.getStatus());
        }
        Set<ProjectCategory> categorySet = projList.get(0).getProjectCategories();
        for (ProjectCategory projectCategory : categorySet) {
            //System.out.println("category is : " + projectCategory.getName());
            String name = projectCategory.getName();
            if (name.equals("Bio Engineering")) {
                categorySelected.add(name);
                bioengineeringCheckBox.setSelected(true);
            }
            if (name.equals("Civil Engineering")) {
                categorySelected.add(name);
                civilEngineeringCheckBox.setSelected(true);
            }
            if (name.equals("Computer Engineering")) {
                categorySelected.add(name);
                computerEngineeringCheckBox.setSelected(true);
            }
            if (name.equals("Electrical Engineering")) {
                categorySelected.add(name);
                electricalEngineeringCheckBox.setSelected(true);
            }
            if (name.equals("Mechanical Engineering")) {
                categorySelected.add(name);
                mechanicalEngineeringCheckBox.setSelected(true);
            }
            
        }
    }//GEN-LAST:event_chooseProjectComboBoxActionPerformed

    private void editProjectDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProjectDetailsActionPerformed
        // TODO add your handling code here:
        final String array[] = new String[12];
        if (projectNameTextField.getText() == null || projectNameTextField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(mainPanel, "Please enter Project Name");
        } else if (shortDescriptionTextField.getText() == null || shortDescriptionTextField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(mainPanel, "Please enter Short Description for Project");
        } else if (jTextArea1.getText() == null || jTextArea1.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(mainPanel, "Please enter General Description for Project");
        } else if (projectStatusComboBox.getSelectedItem().toString() == null || projectStatusComboBox.getSelectedItem().toString().trim().equals("")
                || projectStatusComboBox.getSelectedItem().toString().trim().equals("Choose a Status")) {
            JOptionPane.showMessageDialog(mainPanel, "Please select Project Status");
        } else if (categorySelected.size() < 1) {
            JOptionPane.showMessageDialog(mainPanel, "Please select Category for Project");
        } else if (null == startDate.getDate()) {
            JOptionPane.showMessageDialog(mainPanel, "Please enter Project Start Date");
        } else if (null == endDate.getDate()) {
            JOptionPane.showMessageDialog(mainPanel, "Please enter Project End Date");
        } else {

            array[0] = projectNameTextField.getText();
            array[1] = shortDescriptionTextField.getText();
            array[2] = jTextArea1.getText();
            array[3] = projectStatusComboBox.getSelectedItem().toString();
            System.out.println("status : " + array[3]);
            array[4] = projectLocationTextField.getText();
            array[5] = startDate.getDate().toString();
            array[6] = endDate.getDate().toString();
            array[7] = scopeTextField.getText();
            array[8] = outcomeTextField.getText();
            

            Object projectIdItem = chooseProjectComboBox.getSelectedItem();
            String projectIdValue = ((ComboItem) projectIdItem).getValue();
            array[9] = projectIdValue;
            
            System.out.println("date : " + startDate.getDate());
            if (civilEngineeringCheckBox.isSelected()) {
                categoriesList.add("Civil Engineering");
            }
            if (bioengineeringCheckBox.isSelected()) {
                categoriesList.add("BioEngineering");
            }
            if (mechanicalEngineeringCheckBox.isSelected()) {
                categoriesList.add("Mechanical Engineering");
            }
            if (electricalEngineeringCheckBox.isSelected()) {
                categoriesList.add("Electrical Engineering");
            }
            if (computerEngineeringCheckBox.isSelected()) {
                categoriesList.add("Computer Engineering");
            }

            boolean success = editGeneralProjectInformationController.editProject(array, categoriesList);
            if (success) {
                JOptionPane.showMessageDialog(mainPanel, "Project has been Updated succesfully");
            } else {
                JOptionPane.showMessageDialog(mainPanel, "Project could not be Updated");
            }
    }//GEN-LAST:event_editProjectDetailsActionPerformed
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addNewProjectTextArea;
    private javax.swing.JCheckBox bioengineeringCheckBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JComboBox chooseProjectComboBox;
    private javax.swing.JCheckBox civilEngineeringCheckBox;
    private javax.swing.JCheckBox computerEngineeringCheckBox;
    private javax.swing.JButton editProjectDetails;
    private javax.swing.JCheckBox electricalEngineeringCheckBox;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel logoLabel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox mechanicalEngineeringCheckBox;
    private javax.swing.JLabel outcomeLabel;
    private javax.swing.JTextField outcomeTextField;
    private javax.swing.JTextField projectLocationTextField;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectNameTextField;
    private javax.swing.JComboBox projectStatusComboBox;
    private javax.swing.JLabel scopeLabel;
    private javax.swing.JTextField scopeTextField;
    private javax.swing.JLabel shortDescriptionLabel;
    private javax.swing.JTextField shortDescriptionTextField;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JLabel statusProjectLabel;
    // End of variables declaration//GEN-END:variables
}
