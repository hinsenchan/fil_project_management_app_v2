/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.src.frugalinnovationlab.view;

import com.src.frugalinnovationlab.Controller.EditProjectParticipantsController;
import com.src.frugalinnovationlab.Entity.ParticipantDesignation;
import com.src.frugalinnovationlab.Entity.Participants;
import com.src.frugalinnovationlab.Entity.Project;
import com.src.frugalinnovationlab.Entity.ProjectParticipants;
import java.util.List;
import com.src.frugalinnovationlab.Wrappers.ComboItem;
import com.src.frugalinnovationlab.helper.Printer;
import com.toedter.calendar.JDateChooser;
import java.awt.Component;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author diptik
 */
public class EditProjectParticipants extends javax.swing.JPanel {

    EditProjectParticipantsController editProjectParticipantsController;
    List<Project> projectList;
    List<ParticipantDesignation> participantDesignationsList;
    List<Participants> participants;
    DefaultTableModel model = new DefaultTableModel();
    ArrayList<ProjectParticipants> participantsList = new ArrayList<ProjectParticipants>();

    /**
     * Creates new form EditGeneralProjectInformation
     */
    public EditProjectParticipants() {
        editProjectParticipantsController = new EditProjectParticipantsController(this);
        projectList = editProjectParticipantsController.getProjectsFromDatabase();
        participantDesignationsList = editProjectParticipantsController.getParticipantsDesignationFromDatabase();
        participants = editProjectParticipantsController.getParticipantsFromDatabase();

        initComponents();
        addParticipantPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        addNewProjectLabel = new javax.swing.JLabel();
        participantNameLabel = new javax.swing.JLabel();
        projectNameLabel = new javax.swing.JLabel();
        chooseProjectComboBox = new javax.swing.JComboBox();
        roleComboBox = new javax.swing.JComboBox();
        participantRoleLabel = new javax.swing.JLabel();
        chooseParticipantComboBox = new javax.swing.JComboBox();
        addParticipantButton = new javax.swing.JButton();
        listProjectParticipantsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        deleteParticipantButton = new javax.swing.JButton();
        updateProjectButton = new javax.swing.JButton();
        logoLabel2 = new javax.swing.JLabel();
        addNewParticipantButton = new javax.swing.JButton();
        addParticipantPanel = new javax.swing.JPanel();
        addTitleComboBox = new javax.swing.JComboBox();
        addTitleLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        designationLabel = new javax.swing.JLabel();
        designationTextField = new javax.swing.JTextField();
        addNewParticipantPanelButton = new javax.swing.JButton();
        addNewParticipantRoleComboBox = new javax.swing.JComboBox();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        organizationTextField = new javax.swing.JTextField();
        organizationLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        addTitleLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 170, 153), 4));
        setPreferredSize(new java.awt.Dimension(723, 731));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        addNewProjectLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        addNewProjectLabel.setText("Edit Project Participants");

        participantNameLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        participantNameLabel.setText("Participant Role");

        projectNameLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        projectNameLabel.setText("Project Name");

        chooseProjectComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        chooseProjectComboBox.setForeground(new java.awt.Color(0, 95, 45));
        chooseProjectComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a Project" }));
        for (int i = 0; i < projectList.size(); i++) {

            chooseProjectComboBox.addItem(new ComboItem(projectList.get(i).getName(),
                String.valueOf(projectList.get(i).getId())));
    }
    chooseProjectComboBox.setMaximumSize(new java.awt.Dimension(200, 200));
    chooseProjectComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            chooseProjectComboBoxActionPerformed(evt);
        }
    });

    roleComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    roleComboBox.setForeground(new java.awt.Color(0, 95, 45));
    roleComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a Role" }));
    for(int i = 0; i < participantDesignationsList.size(); i++){
        //System.out.println(participantDesignationsList.get(i).getName());
        roleComboBox.addItem(new ComboItem(participantDesignationsList.get(i).getName(), Integer.toString(participantDesignationsList.get(i).getId())));
    }
    roleComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            roleComboBoxActionPerformed(evt);
        }
    });

    participantRoleLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    participantRoleLabel.setText("Participant Name");

    chooseParticipantComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    chooseParticipantComboBox.setForeground(new java.awt.Color(0, 95, 45));
    chooseParticipantComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose A Participant" }));
    this.sortParticipants();
    for(int i = 0; i < participants.size(); i++){
        String fullName = participants.get(i).getNameTitle().concat(" "+
            participants.get(i).getFirstname()).concat(" "+participants.get(i).getLastname());
        chooseParticipantComboBox.addItem(new ComboItem(fullName, Integer.toString(participants.get(i).getId())));
    }
    chooseParticipantComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            chooseParticipantComboBoxActionPerformed(evt);
        }
    });

    addParticipantButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    addParticipantButton.setForeground(new java.awt.Color(0, 95, 45));
    addParticipantButton.setText("Add Participant");
    addParticipantButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addParticipantButtonActionPerformed(evt);
        }
    });

    listProjectParticipantsLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
    listProjectParticipantsLabel.setText("List of Project Participants");

    jTable1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Participant Id", "Name", "Role Id", "Role"
        }
    ));
    jScrollPane3.setViewportView(jTable1);

    deleteParticipantButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    deleteParticipantButton.setForeground(new java.awt.Color(225, 28, 29));
    deleteParticipantButton.setText("Delete Participant");
    deleteParticipantButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteParticipantButtonActionPerformed(evt);
        }
    });

    updateProjectButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    updateProjectButton.setForeground(new java.awt.Color(0, 95, 45));
    updateProjectButton.setText("Update Project");
    updateProjectButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateProjectButtonActionPerformed(evt);
        }
    });

    logoLabel2.setBackground(new java.awt.Color(255, 255, 255));
    logoLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scu-mission.png"))); // NOI18N

    addNewParticipantButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    addNewParticipantButton.setForeground(new java.awt.Color(0, 95, 45));
    addNewParticipantButton.setText("New Participant...");
    addNewParticipantButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addNewParticipantButtonActionPerformed(evt);
        }
    });

    addTitleComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    addTitleComboBox.setForeground(new java.awt.Color(0, 95, 45));
    addTitleComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a Title", "Mr.", "Mrs.", "Miss.", "Dr." }));

    addTitleLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    addTitleLabel.setText("Title");

    firstNameLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    firstNameLabel.setText("First Name");

    firstNameTextField.setColumns(11);
    firstNameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    firstNameTextField.setToolTipText("Enter First Name");
    firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            firstNameTextFieldActionPerformed(evt);
        }
    });

    lastNameLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    lastNameLabel.setText("Last Name");

    lastNameTextField.setColumns(11);
    lastNameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    lastNameTextField.setToolTipText("Enter Last Name");

    designationLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    designationLabel.setText("Designation");

    designationTextField.setColumns(11);
    designationTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    designationTextField.setToolTipText("Enter Designation");

    addNewParticipantPanelButton.setText("Done");
    addNewParticipantPanelButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addNewParticipantPanelButtonActionPerformed(evt);
        }
    });

    addNewParticipantRoleComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    addNewParticipantRoleComboBox.setForeground(new java.awt.Color(0, 95, 45));
    addNewParticipantRoleComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a Role" }));
    for(int i = 0; i < participantDesignationsList.size(); i++){
        //System.out.println(participantDesignationsList.get(i).getName());
        addNewParticipantRoleComboBox.addItem(new ComboItem(participantDesignationsList.get(i).getName(), Integer.toString(participantDesignationsList.get(i).getId())));
    }
    addNewParticipantRoleComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addNewParticipantRoleComboBoxActionPerformed(evt);
        }
    });

    emailLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    emailLabel.setText("Email");

    emailTextField.setColumns(11);
    emailTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    emailTextField.setToolTipText("Enter First Name");
    emailTextField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            emailTextFieldActionPerformed(evt);
        }
    });

    organizationTextField.setColumns(11);
    organizationTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    organizationTextField.setToolTipText("Enter Last Name");

    organizationLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    organizationLabel.setText("Organization");

    phoneLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    phoneLabel.setText("Phone");

    phoneTextField.setColumns(11);
    phoneTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    phoneTextField.setToolTipText("Enter First Name");
    phoneTextField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            phoneTextFieldActionPerformed(evt);
        }
    });

    addTitleLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
    addTitleLabel1.setText("Role");

    javax.swing.GroupLayout addParticipantPanelLayout = new javax.swing.GroupLayout(addParticipantPanel);
    addParticipantPanel.setLayout(addParticipantPanelLayout);
    addParticipantPanelLayout.setHorizontalGroup(
        addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addParticipantPanelLayout.createSequentialGroup()
            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(addParticipantPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(phoneLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addParticipantPanelLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(addParticipantPanelLayout.createSequentialGroup()
                            .addComponent(addTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(63, 63, 63)
                            .addComponent(addTitleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(92, 92, 92))
                        .addGroup(addParticipantPanelLayout.createSequentialGroup()
                            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(designationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(addParticipantPanelLayout.createSequentialGroup()
                                    .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(organizationLabel)
                                        .addComponent(addTitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(addNewParticipantRoleComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(organizationTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addGap(101, 101, 101)))
                    .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addNewParticipantPanelButton, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addParticipantPanelLayout.createSequentialGroup()
                            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(emailLabel)
                                .addComponent(firstNameLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addParticipantPanelLayout.createSequentialGroup()
                            .addComponent(lastNameLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGap(22, 22, 22))
        .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addParticipantPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(designationLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );
    addParticipantPanelLayout.setVerticalGroup(
        addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(addParticipantPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(addTitleLabel)
                .addComponent(addTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(firstNameLabel)
                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(designationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lastNameLabel))
            .addGap(8, 8, 8)
            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(emailLabel)
                .addComponent(organizationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(organizationLabel)
                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(phoneLabel)
                .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(addNewParticipantRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(addTitleLabel1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addNewParticipantPanelButton)
            .addContainerGap())
        .addGroup(addParticipantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addParticipantPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(designationLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );

    jButton1.setText("Print");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(addParticipantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(addNewProjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(listProjectParticipantsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteParticipantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(updateProjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(projectNameLabel)
                        .addComponent(participantNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(participantRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(49, 49, 49)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(chooseProjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(roleComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chooseParticipantComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addNewParticipantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addParticipantButton))))))
            .addGap(64, 64, 64))
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(logoLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(24, 24, 24)
            .addComponent(addNewProjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(23, 23, 23)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(projectNameLabel)
                .addComponent(chooseProjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(participantNameLabel)
                .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(participantRoleLabel)
                .addComponent(chooseParticipantComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(addParticipantButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(addNewParticipantButton)
            .addGap(18, 18, 18)
            .addComponent(addParticipantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(listProjectParticipantsLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(deleteParticipantButton)
                .addComponent(jButton1)
                .addComponent(updateProjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(11, 11, 11))
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(logoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );

    jScrollPane1.setViewportView(jPanel1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
    );
    }// </editor-fold>//GEN-END:initComponents

    private void roleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleComboBoxActionPerformed

    private void chooseParticipantComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseParticipantComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseParticipantComboBoxActionPerformed

    private void chooseProjectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProjectComboBoxActionPerformed
        // TODO add your handling code here:
        Object projectItem = chooseProjectComboBox.getSelectedItem();
        //  System.out.println("object item : " +projectItem);
        String projectId = String.valueOf(((ComboItem) projectItem).getValue());
        //  System.out.println("project id : " + projectId);

        if (model.getRowCount() > 0) {
            for (int i = model.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        List result = editProjectParticipantsController.fetchParticipantsByProject(projectId);
        participantsList.clear();
        System.out.println("result size : " + result.size());
        for (int i = 0; i < result.size(); i++) {
            Object[] values = (Object[]) result.get(i);
            System.out.println(i + " -- " + values[0] + "; " + values[1]);
            //System.out.println("part 1 : " +projectParticipants.getParticipants().getId());
            //   System.out.println("part 2 : " +projectParticipants.getParticipants().getId());
            String participantValue = String.valueOf(values[3]);
            String participantItem = values[0].toString().concat(" ").concat(values[1].toString())
                    .concat(" ").concat(values[2].toString());
            String roleValue = values[4].toString();
            String roleItem = values[5].toString();
            ProjectParticipants a = new ProjectParticipants(Integer.parseInt(projectId), Integer.parseInt(participantValue),
                    Integer.parseInt(roleValue));
            participantsList.add(a);
            Object[] row = {participantValue, participantItem, roleValue, roleItem};
            model = (DefaultTableModel) jTable1.getModel();
            model.addRow(row);
            //  System.out.println("here");
        }

    }//GEN-LAST:event_chooseProjectComboBoxActionPerformed

    private void addParticipantButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addParticipantButtonActionPerformed
        // TODO add your handling code here:
        Object projectItem = chooseProjectComboBox.getSelectedItem();
        String projectId = ((ComboItem) projectItem).getValue();

        Object roleItem = roleComboBox.getSelectedItem();
        String roleValue = ((ComboItem) roleItem).getValue();

        Object participantItem = chooseParticipantComboBox.getSelectedItem();
        String participantValue = ((ComboItem) participantItem).getValue();

        ProjectParticipants a = new ProjectParticipants(Integer.parseInt(projectId),
                Integer.parseInt(participantValue), Integer.parseInt(roleValue));
        participantsList.add(a);
        System.out.println("participantsList size : " + participantsList.size());

        Object[] row = {participantValue, participantItem, roleValue, roleItem};
        model = (DefaultTableModel) jTable1.getModel();
        model.addRow(row);
    }//GEN-LAST:event_addParticipantButtonActionPerformed

    private void deleteParticipantButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteParticipantButtonActionPerformed
        // TODO add your handling code here:

        Object projectItem = chooseProjectComboBox.getSelectedItem();
        String projectId = ((ComboItem) projectItem).getValue();

        int row = jTable1.getSelectedRow();

        String participantId = model.getValueAt(row, 0).toString();
        String roleId = model.getValueAt(row, 2).toString();
        ProjectParticipants a = new ProjectParticipants(Integer.parseInt(projectId),
                Integer.parseInt(participantId), Integer.parseInt(roleId));
        System.out.println("contains : " + participantsList.contains(a));
        Iterator<ProjectParticipants> itr = participantsList.iterator();
        while (itr.hasNext()) {
            ProjectParticipants x = itr.next();
            //     System.out.println("x value : " + x.getParticipants().getId());
            if (a.getProjectParticipantsPK().getProjectId() == x.getProjectParticipantsPK().getProjectId()
                    && a.getProjectParticipantsPK().getDesignation() == x.getProjectParticipantsPK().getDesignation()
                    && a.getProjectParticipantsPK().getParticipantId() == x.getProjectParticipantsPK().getParticipantId()) {
                System.out.println("Removed : ");
                itr.remove();
            }
        }
        model.removeRow(row);
    }//GEN-LAST:event_deleteParticipantButtonActionPerformed

    private void updateProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProjectButtonActionPerformed
        // TODO add your handling code here:
        Object projectItem = chooseProjectComboBox.getSelectedItem();
        String projectId = ((ComboItem) projectItem).getValue();
        //    System.out.println("project id : " + projectId);
        System.out.println("participantsList size : " + participantsList.size());
        for (int i = 0; i < participantsList.size(); i++) {
            ProjectParticipants projectParticipants = participantsList.get(i);
            System.out.println("projectParticipants is : " + projectParticipants);
            System.out.println("project id :" + projectParticipants.getProjectParticipantsPK().getProjectId() + "; "
                    + "role id : " + projectParticipants.getProjectParticipantsPK().getDesignation() + "; "
                    + "participant id : " + projectParticipants.getProjectParticipantsPK().getParticipantId());
        }
        boolean success = editProjectParticipantsController.editProjectParticipants(projectId, participantsList);
        if (success) {
            JOptionPane.showMessageDialog(jPanel1, "Participants has been Updated succesfully");
            Component[] panels = jPanel1.getComponents();
            for (Component C : panels) {
                //System.out.println("ok here now :"+C.getClass());
                if (C instanceof JTextField || C instanceof JTextArea || C instanceof JTable
                        || C instanceof JDateChooser || C instanceof JFileChooser) {
                    //  System.out.println("not here at all");
                    ((JTextComponent) C).setText(""); //abstract superclass
                }
                if (C instanceof JComboBox) {
                    //        ((JComboBox) C).setSelectedIndex(0); //abstract superclass
                }
            }


        } else {
            JOptionPane.showMessageDialog(jPanel1, "Participants could not be Updated");
        }

    }//GEN-LAST:event_updateProjectButtonActionPerformed

    private void addNewParticipantButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewParticipantButtonActionPerformed
        // TODO add your handling code here:
        addParticipantPanel.setVisible(true);
    }//GEN-LAST:event_addNewParticipantButtonActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void addNewParticipantPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewParticipantPanelButtonActionPerformed
        // TODO add your handling code here:
        String[] array = new String[8];
        array[0] = addTitleComboBox.getSelectedItem().toString();
        array[1] = firstNameTextField.getText();
        array[2] = "";
        array[3] = lastNameTextField.getText();
        array[4] = designationTextField.getText();
        array[5] = emailTextField.getText();
        array[6] = phoneTextField.getText();
        array[7] = organizationTextField.getText();

        if (array[1] == null || array[1].equals("") || addNewParticipantRoleComboBox.getSelectedItem() == null
                || addNewParticipantRoleComboBox.getSelectedItem().equals("Choose a Role") || array[3] == null || array[3].equals("")
                || array[0] == null || array[0].equals("Choose a Title")) {
            JOptionPane.showMessageDialog(jPanel1, "Please enter Participant Details");
        } else {
            //System.out.println("addNewParticipantRoleComboBox.getSelectedItem() = " + addNewParticipantRoleComboBox.getSelectedItem());
            boolean success = editProjectParticipantsController.addParticipant(array);
            if (success) {
                participants = editProjectParticipantsController.getParticipantsFromDatabase();
                this.sortParticipants();
                chooseParticipantComboBox.removeAllItems();
                chooseParticipantComboBox.addItem("Choose A Participant");
                for (int i = 0; i < participants.size(); i++) {
                    String fullName = participants.get(i).getNameTitle().concat(" "
                            + participants.get(i).getFirstname()).concat(" " + participants.get(i).getLastname());
                    chooseParticipantComboBox.addItem(new ComboItem(fullName, Integer.toString(participants.get(i).getId())));
                }
                Object projectItem = chooseProjectComboBox.getSelectedItem();
                String projectId = ((ComboItem) projectItem).getValue();
                //initComponents();
                Object roleItem = addNewParticipantRoleComboBox.getSelectedItem();
                String roleValue = ((ComboItem) roleItem).getValue();

                String participantValue = array[0].concat(" ").concat(array[1]).concat(" ").concat(array[3]);
                //Object participantItem = (Object)new ComboItem(participantValue, Integer.toString(participants.get(participants.size()-1).getId()));
                String participantId = Integer.toString(participants.get(participants.size() - 1).getId());
                //AssignParticipantsToProject a = new AssignParticipantsToProject(participantId, roleValue);
                ProjectParticipants a = new ProjectParticipants(Integer.parseInt(projectId), Integer.parseInt(participantId),
                        Integer.parseInt(roleValue));

                participantsList.add(a);
                Object[] row = {participantId, participantValue, roleValue, roleItem};
                model = (DefaultTableModel) jTable1.getModel();
                model.addRow(row);
                JOptionPane.showMessageDialog(jPanel1, "Participant added succesfully");
            } else {
                JOptionPane.showMessageDialog(jPanel1, "Participant could not be added");
            }
        }
    }//GEN-LAST:event_addNewParticipantPanelButtonActionPerformed

    private void addNewParticipantRoleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewParticipantRoleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewParticipantRoleComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        PrinterJob pjob = PrinterJob.getPrinterJob();
        PageFormat preformat = pjob.defaultPage();
        preformat.setOrientation(PageFormat.LANDSCAPE);
        PageFormat postformat = pjob.pageDialog(preformat);
//If user does not hit cancel then print.
        if (preformat != postformat) {
            //Set print component
            pjob.setPrintable(new Printer(jPanel1), postformat);
            if (pjob.printDialog()) {
                try {
                    pjob.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(EditProjectParticipants.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void phoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewParticipantButton;
    private javax.swing.JButton addNewParticipantPanelButton;
    private javax.swing.JComboBox addNewParticipantRoleComboBox;
    private javax.swing.JLabel addNewProjectLabel;
    private javax.swing.JButton addParticipantButton;
    private javax.swing.JPanel addParticipantPanel;
    private javax.swing.JComboBox addTitleComboBox;
    private javax.swing.JLabel addTitleLabel;
    private javax.swing.JLabel addTitleLabel1;
    private javax.swing.JComboBox chooseParticipantComboBox;
    private javax.swing.JComboBox chooseProjectComboBox;
    private javax.swing.JButton deleteParticipantButton;
    private javax.swing.JLabel designationLabel;
    private javax.swing.JTextField designationTextField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel listProjectParticipantsLabel;
    private javax.swing.JLabel logoLabel2;
    private javax.swing.JLabel organizationLabel;
    private javax.swing.JTextField organizationTextField;
    private javax.swing.JLabel participantNameLabel;
    private javax.swing.JLabel participantRoleLabel;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JComboBox roleComboBox;
    private javax.swing.JButton updateProjectButton;
    // End of variables declaration//GEN-END:variables
    
    public void sortParticipants() {
        if (participants != null) {
            Collections.sort(participants, new ParticipantsComparator());
        }
    }
    
    class ParticipantsComparator implements Comparator<Participants> {
        public int compare(Participants a, Participants b) {
            int retVal = -1;
            retVal = a.getLastname().compareToIgnoreCase(b.getLastname());
            if (retVal != 0) { return retVal; }
            else {
                return a.getFirstname().compareTo(b.getFirstname());
            }
        }
    }
}
