/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.src.frugalinnovationlab.view;

import com.src.frugalinnovationlab.Entity.Project;
import com.src.frugalinnovationlab.Entity.ProjectStatus;
import com.src.frugalinnovationlab.Controller.AdvancedSearchController;
import com.src.frugalinnovationlab.Entity.ProjectView;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diptik
 */
public class AdvancedSearchPanel extends javax.swing.JPanel {

    AdvancedSearchController advancedsearchcontroller;
    List<Project> projectList;
    List<ProjectStatus> projectStatusList;
    List<String> categorySelected = new ArrayList<String>();
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form AddNewProjectPanel
     */
    public AdvancedSearchPanel() {
        advancedsearchcontroller = new AdvancedSearchController(this);
        projectStatusList = advancedsearchcontroller.getProjectStatusFromDatabase();
        projectList = advancedsearchcontroller.getProjectsFromDatabase();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        shortDescriptionTextField = new javax.swing.JTextField();
        civilEngineeringCheckBox = new javax.swing.JCheckBox();
        projectStatusComboBox = new javax.swing.JComboBox();
        electricalEngineeringCheckBox = new javax.swing.JCheckBox();
        bioengineeringCheckBox = new javax.swing.JCheckBox();
        computerEngineeringCheckBox = new javax.swing.JCheckBox();
        categoryLabel = new javax.swing.JLabel();
        shortDescriptionLabel = new javax.swing.JLabel();
        mechanicalEngineeringCheckBox = new javax.swing.JCheckBox();
        advancedSearchTextArea = new javax.swing.JLabel();
        statusProjectLabel = new javax.swing.JLabel();
        searchProjectButton = new javax.swing.JButton();
        scopeLabel = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        scopeTextField = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        logoLabel2 = new javax.swing.JLabel();
        shortDescriptionLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 170, 153), 4));
        setPreferredSize(new java.awt.Dimension(600, 600));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(681, 841));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainPanel.setInheritsPopupMenu(true);
        mainPanel.setPreferredSize(new java.awt.Dimension(681, 841));
        mainPanel.setRequestFocusEnabled(false);

        shortDescriptionTextField.setColumns(20);
        shortDescriptionTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        civilEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        civilEngineeringCheckBox.setText("Civil Engineering");
        civilEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                civilEngineeringCheckBoxActionPerformed(evt);
            }
        });

        projectStatusComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        projectStatusComboBox.setForeground(new java.awt.Color(0, 95, 45));
        projectStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Status" }));
        for(int i = 0; i < projectStatusList.size(); i++){
            //projectStatusList.get(i).getStatus();
            projectStatusComboBox.addItem(projectStatusList.get(i).getStatus());
        }
        projectStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectStatusComboBoxActionPerformed(evt);
            }
        });

        electricalEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        electricalEngineeringCheckBox.setText("Electrical Engineering");
        electricalEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electricalEngineeringCheckBoxActionPerformed(evt);
            }
        });

        bioengineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        bioengineeringCheckBox.setText("Bioengineering");
        bioengineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bioengineeringCheckBoxActionPerformed(evt);
            }
        });

        computerEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        computerEngineeringCheckBox.setText("Computer Engineering");
        computerEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computerEngineeringCheckBoxActionPerformed(evt);
            }
        });

        categoryLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        categoryLabel.setText("Category");

        shortDescriptionLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        shortDescriptionLabel.setText("Short Description");
        shortDescriptionLabel.setToolTipText("");

        mechanicalEngineeringCheckBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        mechanicalEngineeringCheckBox.setText("Mechanical Engineering");
        mechanicalEngineeringCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mechanicalEngineeringCheckBoxActionPerformed(evt);
            }
        });

        advancedSearchTextArea.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        advancedSearchTextArea.setText("Advanced Search");

        statusProjectLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        statusProjectLabel.setText("Status of Project");

        searchProjectButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        searchProjectButton.setForeground(new java.awt.Color(0, 95, 45));
        searchProjectButton.setText("Search");
        searchProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchProjectButtonActionPerformed(evt);
            }
        });

        scopeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        scopeLabel.setText("Scope");

        startDateLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        startDateLabel.setText("Start Date");

        endDateLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        endDateLabel.setText("End Date");

        jDateChooser1.setBackground(new java.awt.Color(150, 170, 153));

        jDateChooser2.setBackground(new java.awt.Color(150, 170, 153));

        logoLabel2.setBackground(new java.awt.Color(255, 255, 255));
        logoLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scu-mission.png"))); // NOI18N

        shortDescriptionLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        shortDescriptionLabel1.setText("Search Text");
        shortDescriptionLabel1.setToolTipText("");

        searchTextField.setColumns(20);
        searchTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project Name", "Description", "Status", "Scope", "Start Date", "End Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchProjectButton)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(advancedSearchTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(shortDescriptionLabel)
                                .addComponent(statusProjectLabel)
                                .addComponent(categoryLabel)
                                .addComponent(scopeLabel)
                                .addComponent(startDateLabel)
                                .addComponent(endDateLabel)
                                .addComponent(shortDescriptionLabel1))
                            .addGap(43, 43, 43)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(bioengineeringCheckBox)
                                        .addComponent(civilEngineeringCheckBox))
                                    .addGap(49, 49, 49)
                                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mechanicalEngineeringCheckBox)
                                        .addComponent(electricalEngineeringCheckBox)))
                                .addComponent(projectStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(computerEngineeringCheckBox)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(searchTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(shortDescriptionTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addComponent(scopeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGap(212, 212, 212)
                    .addComponent(logoLabel2)
                    .addContainerGap(293, Short.MAX_VALUE)))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(advancedSearchTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shortDescriptionLabel1)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shortDescriptionLabel)
                    .addComponent(shortDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusProjectLabel)
                    .addComponent(projectStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(electricalEngineeringCheckBox)
                    .addComponent(bioengineeringCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mechanicalEngineeringCheckBox)
                    .addComponent(civilEngineeringCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computerEngineeringCheckBox)
                .addGap(22, 22, 22)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scopeLabel)
                    .addComponent(scopeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startDateLabel)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endDateLabel)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(searchProjectButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGap(118, 118, 118)
                    .addComponent(logoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(360, Short.MAX_VALUE)))
        );

        jScrollPane3.setViewportView(mainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mechanicalEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mechanicalEngineeringCheckBoxActionPerformed
        // TODO add your handling code here:
        categorySelected.add("Mechanical Engineering");
    }//GEN-LAST:event_mechanicalEngineeringCheckBoxActionPerformed

    private void computerEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computerEngineeringCheckBoxActionPerformed
        // TODO add your handling code here:

        categorySelected.add("Computer Engineering");
    }//GEN-LAST:event_computerEngineeringCheckBoxActionPerformed

    private void projectStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectStatusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectStatusComboBoxActionPerformed

    private void searchProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchProjectButtonActionPerformed
        // TODO add your handling code here:               
        //String data[] = new String[14];
        Map<String, String> advSearchInputs = new HashMap<String, String>();
        Map<String, String> advSearchCatInputs = new HashMap<String, String>();
        //data[0] = searchTextField.getText();
        advSearchInputs.put("search_text", searchTextField.getText());
        //data[1] = shortDescriptionTextField.getText();
        advSearchInputs.put("short_desc", shortDescriptionTextField.getText());
        //data[2] = projectStatusComboBox.getSelectedItem().toString();
        advSearchInputs.put("project_status", projectStatusComboBox.getSelectedItem().toString());

        if (bioengineeringCheckBox.isSelected()) {
            //data[3] = bioengineeringCheckBox.getText();
            advSearchCatInputs.put("bioengineering", "yes");
        } else {
            //data[3] = "";
            advSearchCatInputs.put("bioengineering", "no");
        }

        if (electricalEngineeringCheckBox.isSelected()) {
            //data[4] = electricalEngineeringCheckBox.getText();
            advSearchCatInputs.put("electricalengineering", "yes");
        } else {
            //data[4] = "";
            advSearchCatInputs.put("electricalengineering", "no");
        }

        if (civilEngineeringCheckBox.isSelected()) {
            //data[5] = civilEngineeringCheckBox.getText();
            advSearchCatInputs.put("civilengineering", "yes");
        } else {
            //data[5] = "";
            advSearchCatInputs.put("civilengineering", "no");
        }

        if (mechanicalEngineeringCheckBox.isSelected()) {
            //data[6] = mechanicalEngineeringCheckBox.getText();
            advSearchCatInputs.put("mechanicalengineering", "yes");
        } else {
            //data[6] = "";
            advSearchCatInputs.put("mechanicalengineering", "no");
        }

        if (computerEngineeringCheckBox.isSelected()) {
            //data[7] = computerEngineeringCheckBox.getText();
            advSearchCatInputs.put("computerengineering", "yes");
        } else {
            //data[7] = "";
            advSearchCatInputs.put("computerengineering", "no");
        }

        //data[8] = roleComboBox2.getSelectedItem().toString();

        //data[9] = scopeTextField.getText();
        advSearchInputs.put("scope", scopeTextField.getText());

        if (jDateChooser1.getDate() == null) {
            //data[10] = "";
            advSearchInputs.put("startdate", "");
        } else {
            //data[10] = jDateChooser1.getDate().toString();
            advSearchInputs.put("startdate", jDateChooser1.getDate().toString());
        }

        if (jDateChooser2.getDate() == null) {
            //data[11] = "";
            advSearchInputs.put("enddate", "");
        } else {
            //data[11] = jDateChooser2.getDate().toString();
            advSearchInputs.put("enddate", jDateChooser2.getDate().toString());
        }

        List<ProjectView> projectList = advancedsearchcontroller.fetchAdvancedResults(advSearchInputs, advSearchCatInputs);
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {            
            model.removeRow(i);
        }
        System.out.println("num of rows : " +model.getRowCount());
        for (int i = 0; i < projectList.size(); i++) {
            ProjectView projectView = projectList.get(i);
            //System.out.println("name of project : " + projectView.getProjectName());
            Object[] row = {projectView.getProjectName(), projectView.getShortdesc(), projectView.getStatus(),
                projectView.getScope(), projectView.getStartDate(), projectView.getEndDate()};
            model = (DefaultTableModel) jTable1.getModel();
            model.addRow(row);
        }

    }//GEN-LAST:event_searchProjectButtonActionPerformed

    private void bioengineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bioengineeringCheckBoxActionPerformed
        // TODO add your handling code here:
        categorySelected.add("Bio Engineering");

    }//GEN-LAST:event_bioengineeringCheckBoxActionPerformed

    private void electricalEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electricalEngineeringCheckBoxActionPerformed
        // TODO add your handling code here:
        categorySelected.add("Electrical Engineering");

    }//GEN-LAST:event_electricalEngineeringCheckBoxActionPerformed

    private void civilEngineeringCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_civilEngineeringCheckBoxActionPerformed
        // TODO add your handling code here:

        categorySelected.add("Civil Engineering");
    }//GEN-LAST:event_civilEngineeringCheckBoxActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel advancedSearchTextArea;
    private javax.swing.JCheckBox bioengineeringCheckBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JCheckBox civilEngineeringCheckBox;
    private javax.swing.JCheckBox computerEngineeringCheckBox;
    private javax.swing.JCheckBox electricalEngineeringCheckBox;
    private javax.swing.JLabel endDateLabel;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel logoLabel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox mechanicalEngineeringCheckBox;
    private javax.swing.JComboBox projectStatusComboBox;
    private javax.swing.JLabel scopeLabel;
    private javax.swing.JTextField scopeTextField;
    private javax.swing.JButton searchProjectButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel shortDescriptionLabel;
    private javax.swing.JLabel shortDescriptionLabel1;
    private javax.swing.JTextField shortDescriptionTextField;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JLabel statusProjectLabel;
    // End of variables declaration//GEN-END:variables
}
